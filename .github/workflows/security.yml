name: 🔐 Security Scan

on:
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**' 
      - 'shared/**'
      - 'package*.json'

jobs:
  # ===============================
  # DEPENDENCY SECURITY CHECK
  # ===============================
  dependency-check:
    name: 🔍 Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📋 Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          cd ../frontend && npm ci
          cd ../shared && npm ci

      - name: 🚨 Run npm audit (Backend)
        run: |
          cd backend
          npm audit --audit-level high --json > ../audit-backend.json || true

      - name: 🚨 Run npm audit (Frontend)
        run: |
          cd frontend
          npm audit --audit-level high --json > ../audit-frontend.json || true

      - name: 🚨 Run npm audit (Shared)
        run: |
          cd shared
          npm audit --audit-level high --json > ../audit-shared.json || true

      - name: 📊 Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: |
            audit-*.json
          retention-days: 30

  # ===============================
  # CODEQL SECURITY ANALYSIS
  # ===============================
  codeql:
    name: 🔬 CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  # ===============================
  # CONTAINER SECURITY SCAN
  # ===============================
  container-scan:
    name: 🐳 Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Build backend image
        run: |
          cd backend
          docker build -t foodtracker-backend:latest .

      - name: 🔧 Build frontend image
        run: |
          cd frontend
          docker build -t foodtracker-frontend:latest .

      - name: 🔍 Run Trivy scanner on backend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'foodtracker-backend:latest'
          format: 'sarif'
          output: 'backend-trivy-results.sarif'

      - name: 🔍 Run Trivy scanner on frontend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'foodtracker-frontend:latest'
          format: 'sarif'
          output: 'frontend-trivy-results.sarif'

      - name: 📊 Upload backend Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'backend-trivy-results.sarif'
          category: 'backend-container'

      - name: 📊 Upload frontend Trivy scan results
        uses: github/codeql-action/upload-sarif@v3  
        if: always()
        with:
          sarif_file: 'frontend-trivy-results.sarif'
          category: 'frontend-container'

  # ===============================
  # SECRETS DETECTION
  # ===============================
  secrets-scan:
    name: 🔐 Secrets Detection
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  # ===============================
  # SECURITY COMPLIANCE REPORT
  # ===============================
  security-report:
    name: 📋 Security Compliance Report
    runs-on: ubuntu-latest
    needs: [dependency-check, codeql, container-scan, secrets-scan]
    if: always()

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📊 Generate security report
        run: |
          echo "# 🔐 Security Compliance Report" > SECURITY_REPORT.md
          echo "" >> SECURITY_REPORT.md
          echo "**Generated on:** $(date)" >> SECURITY_REPORT.md
          echo "**Commit:** ${{ github.sha }}" >> SECURITY_REPORT.md
          echo "" >> SECURITY_REPORT.md
          
          echo "## 📋 Job Status" >> SECURITY_REPORT.md
          echo "- 🔍 Dependency Check: ${{ needs.dependency-check.result }}" >> SECURITY_REPORT.md
          echo "- 🔬 CodeQL Analysis: ${{ needs.codeql.result }}" >> SECURITY_REPORT.md
          echo "- 🐳 Container Scan: ${{ needs.container-scan.result }}" >> SECURITY_REPORT.md
          echo "- 🔐 Secrets Detection: ${{ needs.secrets-scan.result }}" >> SECURITY_REPORT.md
          echo "" >> SECURITY_REPORT.md
          
          if [[ "${{ needs.dependency-check.result }}" == "success" && "${{ needs.codeql.result }}" == "success" && "${{ needs.container-scan.result }}" == "success" && "${{ needs.secrets-scan.result }}" == "success" ]]; then
            echo "## ✅ Overall Status: PASSED" >> SECURITY_REPORT.md
            echo "All security checks passed successfully." >> SECURITY_REPORT.md
          else
            echo "## ❌ Overall Status: FAILED" >> SECURITY_REPORT.md
            echo "One or more security checks failed. Please review the details above." >> SECURITY_REPORT.md
          fi

      - name: 📄 Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-compliance-report
          path: SECURITY_REPORT.md
          retention-days: 30

      - name: 💬 Comment PR with security report
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('SECURITY_REPORT.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });