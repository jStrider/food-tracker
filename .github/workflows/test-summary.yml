name: Test Summary Report

on:
  workflow_run:
    workflows: ["Comprehensive Test Automation"]
    types:
      - completed

jobs:
  test-summary:
    name: Generate Test Summary
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download artifacts from test workflow
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow: test-automation.yml
          path: ./artifacts
          
      - name: Generate comprehensive test report
        run: |
          echo "# 🧪 Comprehensive Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status | Coverage | Details |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|----------|---------|" >> $GITHUB_STEP_SUMMARY
          
          # Check backend unit tests
          if [ -d "./artifacts/coverage-backend" ]; then
            echo "| Backend Unit Tests | ✅ PASSED | $(grep -o '"pct":[0-9.]*' ./artifacts/coverage-backend/coverage-summary.json | head -1 | cut -d':' -f2)% | [Coverage Report](./artifacts/coverage-backend/index.html) |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Backend Unit Tests | ❌ FAILED | N/A | Check logs |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check frontend unit tests
          if [ -d "./artifacts/coverage-frontend" ]; then
            echo "| Frontend Unit Tests | ✅ PASSED | $(grep -o '"pct":[0-9.]*' ./artifacts/coverage-frontend/coverage-summary.json | head -1 | cut -d':' -f2)% | [Coverage Report](./artifacts/coverage-frontend/index.html) |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Frontend Unit Tests | ❌ FAILED | N/A | Check logs |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check E2E tests for each browser
          for browser in chromium firefox webkit; do
            if [ -d "./artifacts/e2e-results-$browser" ]; then
              echo "| E2E Tests ($browser) | ✅ PASSED | N/A | [Test Report](./artifacts/e2e-results-$browser/index.html) |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| E2E Tests ($browser) | ❌ FAILED | N/A | Check logs |" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          # Check performance tests
          if [ -d "./artifacts/performance-test-results" ]; then
            echo "| Performance Tests | ✅ PASSED | N/A | [Performance Report](./artifacts/performance-test-results/index.html) |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Performance Tests | ⚠️ SKIPPED | N/A | Optional tests |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check accessibility tests
          if [ -d "./artifacts/accessibility-test-results" ]; then
            echo "| Accessibility Tests | ✅ PASSED | N/A | [A11y Report](./artifacts/accessibility-test-results/index.html) |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Accessibility Tests | ⚠️ SKIPPED | N/A | Optional tests |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Test Metrics" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Generate coverage badge
          if [ -f "./artifacts/coverage-backend/coverage-summary.json" ] && [ -f "./artifacts/coverage-frontend/coverage-summary.json" ]; then
            BACKEND_COV=$(grep -o '"pct":[0-9.]*' ./artifacts/coverage-backend/coverage-summary.json | head -1 | cut -d':' -f2)
            FRONTEND_COV=$(grep -o '"pct":[0-9.]*' ./artifacts/coverage-frontend/coverage-summary.json | head -1 | cut -d':' -f2)
            OVERALL_COV=$(echo "($BACKEND_COV + $FRONTEND_COV) / 2" | bc -l | xargs printf "%.1f")
            echo "- **Overall Coverage**: ${OVERALL_COV}%" >> $GITHUB_STEP_SUMMARY
            echo "- **Backend Coverage**: ${BACKEND_COV}%" >> $GITHUB_STEP_SUMMARY
            echo "- **Frontend Coverage**: ${FRONTEND_COV}%" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔗 Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- [View all test artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Test automation workflow](.github/workflows/test-automation.yml)" >> $GITHUB_STEP_SUMMARY
          echo "- [Run tests locally](./scripts/run-tests.sh)" >> $GITHUB_STEP_SUMMARY

  update-readme-badge:
    name: Update Coverage Badge
    runs-on: ubuntu-latest
    needs: test-summary
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Download coverage artifacts
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow: test-automation.yml
          path: ./artifacts
          
      - name: Update README with coverage badge
        run: |
          if [ -f "./artifacts/coverage-backend/coverage-summary.json" ] && [ -f "./artifacts/coverage-frontend/coverage-summary.json" ]; then
            BACKEND_COV=$(grep -o '"pct":[0-9.]*' ./artifacts/coverage-backend/coverage-summary.json | head -1 | cut -d':' -f2)
            FRONTEND_COV=$(grep -o '"pct":[0-9.]*' ./artifacts/coverage-frontend/coverage-summary.json | head -1 | cut -d':' -f2)
            OVERALL_COV=$(echo "($BACKEND_COV + $FRONTEND_COV) / 2" | bc -l | xargs printf "%.0f")
            
            # Determine badge color
            if [ "$OVERALL_COV" -ge 80 ]; then
              COLOR="brightgreen"
            elif [ "$OVERALL_COV" -ge 60 ]; then
              COLOR="yellow"
            else
              COLOR="red"
            fi
            
            # Update README if it exists
            if [ -f "README.md" ]; then
              # Add or update coverage badge
              BADGE_URL="https://img.shields.io/badge/coverage-${OVERALL_COV}%25-${COLOR}"
              
              if grep -q "coverage-.*-" README.md; then
                sed -i "s|coverage-[0-9]*%25-[a-z]*|coverage-${OVERALL_COV}%25-${COLOR}|g" README.md
              else
                # Add badge after first heading
                sed -i '1a\\n![Coverage]('$BADGE_URL')' README.md
              fi
              
              # Commit if changes were made
              if git diff --quiet README.md; then
                echo "No changes to commit"
              else
                git config --local user.email "action@github.com"
                git config --local user.name "GitHub Action"
                git add README.md
                git commit -m "chore: update coverage badge to ${OVERALL_COV}%"
                git push
              fi
            fi
          fi